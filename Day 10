##Introduction to Machine Learning

import pandas as pd
from sklearn.metrics import mean_absolute_error
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor


# Path of the file to read
iowa_file_path = '../input/home-data-for-ml-course/train.csv'

home_data = pd.read_csv(iowa_file_path)
# Create target object and call it y
y = home_data.SalePrice
# Create X
features = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']
X = home_data[features]

# Split into validation and training data
train_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)

# Specify Model
iowa_model = DecisionTreeRegressor(random_state=1)
# Fit Model
iowa_model.fit(train_X, train_y)

# Make validation predictions and calculate mean absolute error
val_predictions = iowa_model.predict(val_X)
val_mae = mean_absolute_error(val_predictions, val_y)
print("Validation MAE when not specifying max_leaf_nodes: {:,.0f}".format(val_mae))

# Using best value for max_leaf_nodes
iowa_model = DecisionTreeRegressor(max_leaf_nodes=100, random_state=1)
iowa_model.fit(train_X, train_y)
val_predictions = iowa_model.predict(val_X)
val_mae = mean_absolute_error(val_predictions, val_y)
print("Validation MAE for best value of max_leaf_nodes: {:,.0f}".format(val_mae))


##Using Random
import random

random_integer = random.randint(1,10)
print(random_integer)

random_float = random.random()
print(random_float)

randomFloat = random_float * 5

print(randomFloat)

love_score = random.randint(1,100)
print(f"Your lovescore is {love_score}")


## Random Coin Toss

random_side = random.randint(0,1)

if random_side == 1:
    print('Heads')
else:
    print('Tails') """

""" states_of_america = ["Delware", "Pennsylvania"]
print(states_of_america[1])

#Who's Going to but the meal today
import random

names_string = input("Give me everybody's names, separated by a comma. ")
names = names_string.split(", ")

payer_index = random.randint(0, len(names) - 1)
payer_name = names[payer_index]
print(f"{payer_name} is going to buy the meal today!")
